/**
 * @author NarayanaRaju
 *
 */
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode head = new ListNode();
        ListNode temp1,temp2;
        temp1= head;
        while(l1 != null && l2 != null){
            if(l1.val <= l2.val){
                temp2 = new ListNode(l1.val);
                l1 = l1.next;
            }
            else{
                temp2 = new ListNode(l2.val);
                l2 = l2.next;
            }
            temp1.next = temp2;
            temp1 = temp1.next;
        }
        if(l1 == null){
            while(l2 != null){
                temp2 = new ListNode(l2.val);
                l2 = l2.next;
                temp1.next = temp2;
            temp1 = temp1.next;
            }
        }
         else{
            while(l1 != null){
                temp2 = new ListNode(l1.val);
                l1 = l1.next;
                 temp1.next = temp2;
            temp1 = temp1.next;
            }
        }
     return head.next;   
    }
}